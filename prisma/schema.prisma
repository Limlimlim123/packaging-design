generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Status {
  ACTIVE
  INACTIVE
}

enum MemberRole {
  owner
  admin
  member
}

model User {
  id        String   @id @default(cuid())
  phone     String?  @unique
  password  String?
  name      String
  role      Role     @default(USER)
  status    Status   @default(ACTIVE)
  avatar    String?
  email     String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  designs  Design[]
  orders   Order[]
  comments Comment[]
  members  Member[]
  assets   Asset[]
}

model Team {
  id          String   @id @default(cuid())
  name        String
  description String?
  members     Member[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Member {
  id        String     @id @default(cuid())
  role      MemberRole @default(member)
  teamId    String
  userId    String
  team      Team       @relation(fields: [teamId], references: [id], onDelete: Cascade)
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@unique([teamId, userId])
  @@index([teamId])
  @@index([userId])
}

model Design {
  id          String          @id @default(cuid())
  name        String
  description String?
  templateId  String
  content     Json
  thumbnail   String?
  status      String          @default("draft")
  userId      String
  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  template    Template        @relation(fields: [templateId], references: [id])
  order       Order?
  versions    DesignVersion[]
  comments    Comment[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@index([userId])
  @@index([templateId])
  @@index([status])
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  userId    String
  designId  String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  design    Design   @relation(fields: [designId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([designId])
}

model Template {
  id          String         @id @default(cuid())
  name        String
  description String?
  type        String         @default("standard")
  category    String
  style       String[]       @default([])
  thumbnail   String?
  preview2D   String?
  preview3D   String?
  dieline     String?
  sizes       Json           @default("{}")
  price       Decimal        @default(0)
  featured    Boolean        @default(false)
  status      String         @default("active")
  designs     Design[]
  stats       TemplateStats?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  @@index([type])
  @@index([category])
  @@index([status])
  @@index([featured])
}

model TemplateStats {
  id         String   @id @default(cuid())
  templateId String   @unique
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  views      Int      @default(0)
  downloads  Int      @default(0)
  likes      Int      @default(0)
  shares     Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([templateId])
}

model Order {
  id          String   @id @default(cuid())
  orderNumber String   @unique
  status      String   @default("pending")
  totalAmount Decimal  @db.Decimal(10, 2)
  userId      String
  designId    String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  design      Design   @relation(fields: [designId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([orderNumber])
  @@index([status])
}

model DesignVersion {
  id        String   @id @default(cuid())
  name      String
  content   Json
  thumbnail String?
  design    Design   @relation(fields: [designId], references: [id], onDelete: Cascade)
  designId  String
  createdAt DateTime @default(now())
  createdBy String

  @@index([designId])
  @@index([createdBy])
}

model Asset {
  id        String   @id @default(cuid())
  userId    String
  type      String
  name      String
  url       String
  size      Int
  mimeType  String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([type])
}
